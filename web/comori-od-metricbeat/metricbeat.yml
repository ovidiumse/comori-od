metricbeat.modules:
- module: docker
  metricsets:
    - cpu
    - network
    - container
    - diskio
    - memory
    - info 
  hosts: ["unix:///tmp/docker.sock"]
  period: 1m
  enabled: true
- module: elasticsearch
  period: 6h
  metricsets:
    - index
    - index_summary
  processors:
    - drop_event:
        when:
          regexp:
            # discard internal indexes, starting with .
            elasticsearch.index.name: "^[.].*"

  hosts: ["http://comori-od-es:9200"]
  username: ${ELASTIC_USER}
  password: ${ELASTIC_PASSWORD}
- module: system
  metricsets:
    - cpu             # CPU usage
    - load            # CPU load averages
    - memory          # Memory usage
    - network         # Network IO
    - process         # Per process metrics
    - process_summary # Process summary
    - uptime          # System Uptime
    - socket_summary  # Socket summary
    - core           # Per CPU core usage
    - diskio         # Disk IO 
  enabled: true
  period: 1m
  processes: ['.*']
  process.cgroups.enabled: false

  # Configure the metric types that are included by these metricsets.
  cpu.metrics:  ["percentages","normalized_percentages"]  # The other available option is ticks.
  core.metrics: ["percentages"]  # The other available option is ticks.
  process.include_top_n:
    enabled: true
    by_cpu: 10
    by_memory: 10
  processors:
    - script:
        lang: javascript
        id: filter_diskio
        source: >
          function process(event) {
            var diskName = event.Get('system.diskio.name');
            if (diskName == null || diskName.substr(0, 4) == "loop")
              event.Cancel();
          }
- module: system
  metricsets:
    - filesystem     # File system usage for each mountpoint
    - fsstat         # File system summary metrics   
  enabled: true
  period: 6h
  processors:
    - script:
        lang: javascript
        id: filter_filesystem
        source: >
          function process(event) {
            if (event.Get('system.filesystem.total') < 1000000000)
              event.Cancel();
          }
  
- module: nginx
  enabled: true
  period: 1m
  hosts: ["http://nginx-proxy"]
  server_status_path: "nginx_status"

- module: mongodb
  metricsets:
    - dbstats
  enabled: true
  period: 6h
  hosts: ["comori-od-mongo:27017"]
  username: ${MONGO_USERNAME}
  password: ${MONGO_PASSWORD}

- module: mongodb
  metricsets:
    - status
  enabled: true
  period: 1m
  hosts: ["comori-od-mongo:27017"]
  username: ${MONGO_USERNAME}
  password: ${MONGO_PASSWORD}

# timeseries.enabled: true
setup.dashboards.enabled: ${ENABLE_DASHBOARDS}

setup.kibana.host: "http://comori-od-kibana:5601"
setup.kibana.username: ${ELASTIC_USER}
setup.kibana.password: ${ELASTIC_PASSWORD}

output.elasticsearch:
    hosts: ["http://comori-od-es:9200"]
    username: ${ELASTIC_USER}
    password: ${ELASTIC_PASSWORD}